var t=t=>Object.prototype.toString.call(t).slice(8,-1),e=e=>"Object"===t(e)&&(e.constructor===Object&&Object.getPrototypeOf(e)===Object.prototype);function r(t,o){if(!e(t))return o;if(!e(o))return t;for(let[n,c]of Object.entries(o))n in t&&e(t[n])&&e(c)?t[n]=r(t[n],c):t[n]=c;return t}var o=(...t)=>{if(!t.length)throw new TypeError("Cannot convert undefined or null to object");const e=Object.assign({},t[0]);for(let o=1;o<t.length;o++)r(e,t[o]);return e};export{t as getType,e as isPlainObject,o as merge};
